import type { NextPage } from "next";
import Head from "next/head";
import usePagination from "../../hooks/usePagination";

const PagingBasicPage: NextPage = () => {
  const users = [
    { id: 1, firstName: "Nelly", lastName: "Rowe" },
    { id: 2, firstName: "Claire", lastName: "McGory" },
    { id: 3, firstName: "Melon", lastName: "Melonzola" },
    { id: 4, firstName: "Gideon", lastName: "Charles" },
    { id: 5, firstName: "Jennifer", lastName: "Charles" },
  ];

  const {
    currentPageNumber,
    currentPageItems,
    numberOfPages,
    hasPreviousPage,
    hasNextPage,
    goToNextPage,
    goToPreviousPage,
    goToPage,
  } = usePagination(users, 0, 2);

  return (
    <div>
      <Head>
        <title>Next JS Kitchen Sink | Paging -&gt; Basic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU"
          crossOrigin="anonymous"
        ></link>
      </Head>

      <div className="container">
        <h1>Paging -&gt; Basic</h1>

        <table className="table">
          <thead className="table-dark">
            <tr>
              <th>First</th>
              <th>Last</th>
            </tr>
          </thead>
          <tbody>
            {currentPageItems.map((user) => (
              <tr key={user.id}>
                <td>{user.firstName}</td>
                <td>{user.lastName}</td>
              </tr>
            ))}
          </tbody>
        </table>
        <nav aria-label="users pagination">
          <ul className="pagination">
            <li className={`page-item ${hasPreviousPage ? "" : "disabled"}`}>
              <button
                type="button"
                className="page-link"
                disabled={!hasPreviousPage}
                onClick={goToPreviousPage}
              >
                Previous
              </button>
            </li>

            {new Array(numberOfPages).fill(null).map((_, index) => (
              <li
                key={index}
                className={`page-item ${
                  index === currentPageNumber ? "active" : ""
                }`}
                aria-current={index === currentPageNumber ? "page" : null}
              >
                <button
                  type="button"
                  className="page-link"
                  onClick={() => goToPage(index)}
                >
                  {index + 1}
                </button>
              </li>
            ))}

            <li className={`page-item ${hasNextPage ? "" : "disabled"}`}>
              <button
                type="button"
                className="page-link"
                disabled={!hasNextPage}
                onClick={goToNextPage}
              >
                Next
              </button>
            </li>
          </ul>
        </nav>
        <div>
          Page {currentPageNumber + 1} of {numberOfPages}{" "}
          <button
            type="button"
            className="btn btn-secondary"
            disabled={!hasPreviousPage}
            onClick={goToPreviousPage}
          >
            Previous
          </button>{" "}
          <button
            type="button"
            className="btn btn-primary"
            disabled={!hasNextPage}
            onClick={goToNextPage}
          >
            Next
          </button>
        </div>
      </div>
    </div>
  );
};

export default PagingBasicPage;
